"""empty message

Revision ID: 6f1e10a8ab3f
Revises: None
Create Date: 2016-11-13 02:12:48.147000

"""

# revision identifiers, used by Alembic.
revision = '6f1e10a8ab3f'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('category',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('document',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('path', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('document_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(length=45), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('host', sa.String(length=50), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('path', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.String(length=100), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('person',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('identifier', sa.String(length=20), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=True),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('term_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('status')
    )
    op.create_table('document_types_table',
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.Column('document_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['document_type_id'], ['document_type.id'], ),
    sa.PrimaryKeyConstraint('document_id', 'document_type_id')
    )
    op.create_table('rule_document_relationship',
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['rule_id'], ['rule.id'], ),
    sa.PrimaryKeyConstraint('rule_id', 'document_id')
    )
    op.create_table('table',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('location_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('term',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('term', sa.String(length=100), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('abbreviation', sa.String(length=10), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('steward_id', sa.Integer(), nullable=True),
    sa.Column('created_on', sa.DateTime(), nullable=True),
    sa.Column('updated_on', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['owner_id'], ['person.id'], ),
    sa.ForeignKeyConstraint(['status_id'], ['term_status.id'], ),
    sa.ForeignKeyConstraint(['steward_id'], ['person.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('column',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=100), nullable=True),
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('length', sa.String(length=10), nullable=True),
    sa.Column('format', sa.String(length=50), nullable=True),
    sa.Column('table_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['table_id'], ['table.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('link',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.String(length=100), nullable=False),
    sa.Column('address', sa.String(length=200), nullable=False),
    sa.Column('term_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('address'),
    sa.UniqueConstraint('text')
    )
    op.create_table('term_category_relationship',
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['category_id'], ['category.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('term_id', 'category_id')
    )
    op.create_table('term_document_relationship',
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('document_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['document_id'], ['document.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('term_id', 'document_id')
    )
    op.create_table('term_rule_relationship',
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['rule_id'], ['rule.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('term_id', 'rule_id')
    )
    op.create_table('term_to_term_relationship',
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('related_term_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['related_term_id'], ['term.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('term_id', 'related_term_id')
    )
    op.create_table('term_column_relationship',
    sa.Column('term_id', sa.Integer(), nullable=False),
    sa.Column('column_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['column_id'], ['column.id'], ),
    sa.ForeignKeyConstraint(['term_id'], ['term.id'], ),
    sa.PrimaryKeyConstraint('term_id', 'column_id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('term_column_relationship')
    op.drop_table('term_to_term_relationship')
    op.drop_table('term_rule_relationship')
    op.drop_table('term_document_relationship')
    op.drop_table('term_category_relationship')
    op.drop_table('link')
    op.drop_table('column')
    op.drop_table('term')
    op.drop_table('table')
    op.drop_table('rule_document_relationship')
    op.drop_table('document_types_table')
    op.drop_table('term_status')
    op.drop_table('rule')
    op.drop_table('person')
    op.drop_table('location')
    op.drop_table('document_type')
    op.drop_table('document')
    op.drop_table('category')
    ### end Alembic commands ###
